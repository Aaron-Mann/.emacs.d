#+TITLE: Aaron's Emacs Config
#+AUTHOR: Aaron Mann

* Set Encoding System

Contrary to what many Emacs users have in their configs, you don't need more than this to make UTF-8 the default coding system:
#+begin_src emacs-lisp
  (when (fboundp 'set-charset-priority)
      (set-charset-priority 'unicode))     ;; pretty
  (prefer-coding-system 'utf-8)            ;; pretty
  (setq locale-coding-system 'utf-8)       ;; please
#+end_src

* Setup Packages

#+begin_src emacs-lisp  
(require 'cl)
(require 'package)

;; set core packages. Note, this package list should not be edited. These are the core toaster dependencies, and removing these could jepardize modules. Rather, use the package install system available in the 'custom.el' file
;; Another hint worth noting: No language related packages are installed here. Rather, they are individually installed in their language modules

(setq toaster-core-packages '(
			      ;; UI:
			      doom-themes
			      doom-modeline
			      dashboard
			      all-the-icons
			      
			      ;; Modes:
			      evil
			      org

			      ;; Tools
			      projectile
			      magit
			     ))

(defun toaster-install-core-packages ()
  (let ((pkgs (remove-if #'package-installed-p toaster-core-packages )))
    (when pkgs
      (package-refresh-contents)
      (dolist (p toaster-core-packages)
	(package-install p)))))


;; prepare emacs package archives:
(add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/") t)

(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)

(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/") t)

(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)

;; initialize emacs packages:
(package-initialize)

;; Install toaster packages

(toaster-install-core-packages)
#+end_src

* Modules (get all the crap working)

with packaging working, and the important packages already installed, we can start activating and configuring each package one at a time.

** EVIL

#+begin_src emacs-lisp
(require 'evil)
(evil-mode 1)
#+end_src

** Dashboard

#+begin_src emacs-lisp
(setq dashboard-set-heading-icons t)
(setq dashboard-set-file-icons t)
(setq dashboard-banner-logo-title "As far as bloated text editors go, Emacs is pretty fuckin good")
;; (setq dashboard-startup-banner "path/to/file.png")
(setq dashboard-center-content t)
(setq dashboard-items '((recents .100)
				 (agenda . 5)
				 (bookmarks . 5)
				 (projects . 5)
				 (registers . 5)))

(dashboard-setup-startup-hook)

#+end_src

** Modeline

#+begin_src emacs-lisp
(doom-modeline-mode 1)
#+end_src

Theres more stuff I wanna add here! I read somewhere that this bar can be configured to flash when a linter detects an error, which sounds rather fancy. Can't find it tho and I have more important things to work on ATM. Stay tuned!

** Theme

#+begin_src emacs-lisp
(setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
      doom-themes-enable-italic t) ; if nil, italics is universally disabled
(load-theme 'doom-one t)
#+end_src

* Customizations

** Clipboard

Basically make emacs play nicely with the rest of the system clipboard


after Ctrl+c in Linux X11, you can paste by 'yank'ing into emacs:
#+begin_src emacs-lisp
(setq x-select-enable-clipboard t)
#+end_src

after mouse selection in X11, you can pate by 'yank'ing into emacs:
#+begin_src emacs-lisp
(setq x-select-enable-primary t)
#+end_src

** Buffers

The scratch buffer is a waste of space, so lets brutally eleminate it:
#+begin_src emacs-lisp
;; Makes *scratch* empty.
(setq initial-scratch-message "")

;; Removes *scratch* from buffer after the mode has been set.
(defun remove-scratch-buffer ()
    (if (get-buffer "*scratch*")
            (kill-buffer "*scratch*")))
(add-hook 'after-change-major-mode-hook 'remove-scratch-buffer)

;; Removes *messages* from the buffer.
;; (setq-default message-log-max nil)
;; (kill-buffer "*Messages*")

;; Removes *Completions* from buffer after you've opened a file.
(add-hook 'minibuffer-exit-hook
	        '(lambda ()
		            (let ((buffer "*Completions*"))
			                 (and (get-buffer buffer)
					                      (kill-buffer buffer)))))

;; Don't show *Buffer list* when opening multiple files at the same time.
(setq inhibit-startup-buffer-menu t)

;; Show only one active window when opening multiple files at the same time.
(add-hook 'window-setup-hook 'delete-other-windows)

#+end_src

** Remove Ugly UI Elements

#+begin_src emacs-lisp
(menu-bar-mode -1)

(toggle-scroll-bar -1)

(tool-bar-mode -1)
#+end_src


* Cleanup

Basically just bring GC back to normal:

#+begin_src emacs-lisp
(setq gc-cons-threshold 800000))
#+end_src
